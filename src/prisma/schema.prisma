generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
  output        = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int     @id @default(autoincrement())
  name       String
  email      String  @unique
  isVerified Boolean @default(false)
  password   String
  role       String  @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cards     Card[]
  userRooms UserRoom[]
  rooms     Room[]     @relation("RoomCreator")
}

model Room {
  id        Int      @id @default(autoincrement())
  name      String
  userId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users UserRoom[]
  votes Vote[]
  user  User       @relation("RoomCreator", fields: [userId], references: [id])

  @@unique([name, userId])
}

model UserRoom {
  id     Int    @id @default(autoincrement())
  role   String @default("user")
  roomId Int
  userId Int

  room Room @relation(fields: [roomId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([roomId, userId])
}

model Vote {
  id        Int      @id @default(autoincrement())
  content   String
  min       Int      @default(1)
  max       Int      @default(5)
  mid       Int      @default(1)
  roomId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cards Card[]
  room  Room   @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model Card {
  id        Int      @id @default(autoincrement())
  value     String
  userId    Int
  voteId    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  vote Vote @relation(fields: [voteId], references: [id], onDelete: Cascade)

  @@unique([userId, voteId])
}
