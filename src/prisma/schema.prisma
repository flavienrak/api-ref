generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x", "debian-openssl-1.1.x"]
  output        = "../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  email    String @unique
  password String
  role     String @default("user")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cards        UserCard[]
  rooms        UserRoom[]
  createdRooms Room[]     @relation("RoomCreator")
}

model UserCard {
  id    Int    @id @default(autoincrement())
  value String

  userId Int
  roomId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  room Room @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model Room {
  id   Int    @id @default(autoincrement())
  name String

  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users UserRoom[]
  cards UserCard[]
  user  User       @relation("RoomCreator", fields: [userId], references: [id])
}

model UserRoom {
  id   Int    @id @default(autoincrement())
  role String @default("user")

  roomId Int
  userId Int

  room Room @relation(fields: [roomId], references: [id])
  user User @relation(fields: [userId], references: [id])

  @@unique([roomId, userId])
}
